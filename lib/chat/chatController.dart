import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:share_plus/share_plus.dart';
import 'package:jesusapp/theme/theme_provider.dart';

abstract class IApiService {
  Future<String> getResponse(String message);
}

class ChatController extends ChangeNotifier {
  final IApiService apiService;
  final ThemeProvider? themeProvider;
  final List<Map<String, String>> _messages = [];
  bool _initialized = false;

  ChatController({required this.apiService, this.themeProvider}) {
    _initializeMessages();
  }

  List<Map<String, String>> get messages => List.unmodifiable(_messages);

  Future<void> _initializeMessages() async {
    if (_initialized) return;
    _initialized = true;
    
    // Verificar se estamos no tema crist√£o
    final appType = themeProvider?.getConfig<String>('appType', defaultValue: '') ?? '';
    final isChristian = appType == 'christian';
    
    if (isChristian) {
      // Adicionar mensagem de boas-vindas para o tema crist√£o
      _messages.add({
        'role': 'ai', 
        'text': 'Bem-vindo ao Assistente Crist√£o! Estou aqui para ajudar em sua jornada de f√©. Voc√™ pode me perguntar sobre temas b√≠blicos, reflex√µes espirituais ou buscar palavras de encorajamento. Como posso auxiliar em sua caminhada crist√£ hoje?'
      });
      
      // Adicionar sugest√£o de vers√≠culo do dia
      final verseOfDay = _getRandomVerse();
      await Future.delayed(const Duration(milliseconds: 500));
      _messages.add({
        'role': 'ai',
        'text': 'üìñ *Vers√≠culo do dia:* $verseOfDay'
      });
      
      notifyListeners();
    }
  }
  
  String _getRandomVerse() {
    final verses = [
      '"Porque Deus amou o mundo de tal maneira que deu o seu Filho unig√™nito, para que todo aquele que nele cr√™ n√£o pere√ßa, mas tenha a vida eterna." - Jo√£o 3:16',
      '"O Senhor √© o meu pastor, nada me faltar√°." - Salmos 23:1',
      '"Tudo posso naquele que me fortalece." - Filipenses 4:13',
      '"E conhecereis a verdade, e a verdade vos libertar√°." - Jo√£o 8:32',
      '"N√£o temas, porque eu sou contigo; n√£o te assombres, porque eu sou teu Deus; eu te fortale√ßo, e te ajudo, e te sustento com a destra da minha justi√ßa." - Isa√≠as 41:10',
      '"Confie no Senhor de todo o seu cora√ß√£o e n√£o se apoie em seu pr√≥prio entendimento." - Prov√©rbios 3:5',
      '"Busquem, pois, em primeiro lugar o Reino de Deus e a sua justi√ßa, e todas essas coisas lhes ser√£o acrescentadas." - Mateus 6:33',
      '"Eu sou o caminho, a verdade e a vida. Ningu√©m vem ao Pai, a n√£o ser por mim." - Jo√£o 14:6',
      '"Porque sou eu que conhe√ßo os planos que tenho para voc√™s, diz o Senhor, planos de faz√™-los prosperar e n√£o de causar dano, planos de dar a voc√™s esperan√ßa e um futuro." - Jeremias 29:11',
      '"Alegrem-se sempre no Senhor. Novamente direi: alegrem-se!" - Filipenses 4:4'
    ];
    
    verses.shuffle();
    return verses.first;
  }

  void sendMessage(String message) {
    if (message.trim().isEmpty) return;

    _messages.add({'role': 'user', 'text': message});
    notifyListeners();

    _fetchAiResponse(message);
  }

  Future<void> _fetchAiResponse(String message) async {
    final response = await apiService.getResponse(message);

    _messages.add({'role': 'ai', 'text': response});
    notifyListeners();
  }
  
  // Fun√ß√£o para compartilhar uma resposta espec√≠fica
  Future<void> shareResponse(Map<String, String> message) async {
    if (message['text'] == null || message['text']!.isEmpty) return;
    
    try {
      await Share.share(message['text']!);
    } catch (e) {
      debugPrint('Erro ao compartilhar mensagem: $e');
    }
  }
  
  // Fun√ß√£o para copiar a resposta para a √°rea de transfer√™ncia
  Future<void> copyResponseToClipboard(Map<String, String> message) async {
    if (message['text'] == null || message['text']!.isEmpty) return;
    
    try {
      await Clipboard.setData(ClipboardData(text: message['text']!));
    } catch (e) {
      debugPrint('Erro ao copiar mensagem: $e');
    }
  }
}
